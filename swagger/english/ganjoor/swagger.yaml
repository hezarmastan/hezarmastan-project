swagger: "2.0"

info:
  title: Api document for Hezarmastan project
  version: 1.0.0

host: api.hezarmastan.ir
basePath: /ganjoor/v1

paths:
  /poet:
    get:
      summary: a list of poets
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Poet'

  /poet/{poetCode}:
    get:
      summary: detail of specified poet with it's main works
      parameters:
        - in: path
          required: true
          name: poetCode
          description: poet unique code
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PoetDetail'

  /poet/{poetCode}/work/{workCode}:
    get:
      summary: list of subworks of a specified work
      parameters:
        - in: path
          required: true
          name: poetCode
          description: poet unique code
          type: string
        - in: path
          required: true
          name: workCode
          description: work unique code. Start from root work and seperated each work with dot
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PoetWorkDetail'

  /poet/{poetCode}/work/{workCode}/poem:
    get:
      summary: list of poems of a specified works
      parameters:
        - in: path
          required: true
          name: poetCode
          description: poet unique code
          type: string
        - in: path
          required: true
          name: workCode
          description: work unique code. Start from root work and seperated each work with dot
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Poem'

  /poet/{poetCode}/work/{workCode}/poem/{poemCode}:
    get:
      summary: detail and verses of a specified poem
      parameters:
        - in: path
          required: true
          name: poetCode
          description: poet unique code
          type: string
        - in: path
          required: true
          name: workCode
          description: work unique code. Start from root work and seperated each work with dot
          type: string
        - in: path
          required: true
          name: poemCode
          description: poem unique code
          type: number
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PoemDetail'

definitions:
  Poet:
    type: object
    properties:
      code:
        type: string
        example: hafez
      name:
        type: string
        example: حافظ

  PoetDetail:
    type: object
    allOf:
      - $ref: '#/definitions/Poet'
    properties:
      description:
        type: string
        example: شاعر سده هفتم هجری
      works:
        type: array
        items:
          $ref: '#/definitions/PoetWork'
  PoetWork:
    type: object
    properties:
      code:
        type: string
        example: ghazal
      title:
        type: string
        example: غزلیات

  PoetWorkDetail:
    type: object
    allOf:
      - $ref: '#/definitions/PoetWork'
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/PoetWork'
  Poem:
    type: object
    properties:
      code:
        type: string
        example: divan
      title:
        type: string
        example: غزل شمارهٔ ۱

  PoemDetail:
    type: object
    allOf:
      - $ref: '#/definitions/Poem'
    properties:
      verses:
        type: array
        items:
          $ref: '#/definitions/Verse'

  Verse:
    type: object
    properties:
      text:
        type: string
        example: الا یا ایها الساقی
      order:
        type: integer
        format: int32
        example: 1
      position:
        type: string
        enum: [MESRA_FIRST, MESRA_SECOND, TARJI_TARKIB_FIRST, TARJI_TARKIB_SECOND,NIMAEE,PARAGRAPH]